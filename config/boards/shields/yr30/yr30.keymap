// デフォルトキーマップは大西配列を使わせて貰ってる。

// 定義を呼ぶ。
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


// 特殊入力の挙動を調整する。

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

&sk {
};

&sl {
};

&caps_word {
};

&key_repeat {
};


/ {
    // 独自の入力を定義できる（上級者向け）

    behaviors {
    };

    macros {
    };

    conditional_layers {
    };


    // 複数キーの同時押し(Combo)の設定。
    // キー番号早見表：
    //  0  1  2  3  4  5  6  7  8  9
    // 10 11 12 13 14 15 16 17 18 19
    // 20 21 22 23 24 25 26 27 28 29

    combos {
        compatible = "zmk,combos";
        timeout-ms = <50>;
        require-prior-idle-ms = <100>;

        combo_enter {
            key-positions = <17 18>;
            bindings = <&kp ENTER>;
        };

        combo_bs {
            key-positions = <16 17>;
            bindings = <&kp BACKSPACE>;
        };

        combo_space {
            key-positions = <11 12>;
            bindings = <&kp SPACE>;
        };

        combo_tab {
            key-positions = <12 13>;
            bindings = <&kp TAB>;
        };

        combo_shiftspace {
            key-positions = <1 2>;
            bindings = <&kp LS(SPACE)>;
        };

        combo_esc {
            key-positions = <8 9>;
            bindings = <&kp ESC>;
        };

        combo_home {
            key-positions = <15 16>;
            bindings = <&kp HOME>;
        };

        combo_end {
            key-positions = <25 26>;
            bindings = <&kp END>;
        };

        combo_pageup {
            key-positions = <26 27>;
            bindings = <&kp PG_UP>;
        };

        combo_pagedown {
            key-positions = <27 28>;
            bindings = <&kp PG_DN>;
        };

        combo_insert {
            key-positions = <6 7>;
            bindings = <&kp INS>;
        };

        combo_capslock {
            key-positions = <0 1>;
            bindings = <&kp CAPSLOCK>;
        };

        combo_lang2 {
            key-positions = <23 24>;
            bindings = <&kp LANG2>;
        };

        combo_lang1 {
            key-positions = <22 23>;
            bindings = <&kp LANG1>;
        };

        combo_reset_L {
            key-positions = <0 10 20>;
            bindings = <&bootloader>;
        };

        combo_reset_R {
            key-positions = <9 19 29>;
            bindings = <&bootloader>;
        };

        combo_studio_unlock {
            key-positions = <0 1 8 9>;
            bindings = <&studio_unlock>;
        };
    };

    // キーに入力を割り当てる
    // 型（&...）は https://zmk.dev/docs/behaviors/... を参照
    // キーコードは https://zmk.dev/docs/codes/... を参照

    keymap {
        compatible = "zmk,keymap";

        layer_base {
            bindings = <
            &kp Q        &kp L        &kp U        &kp COMMA     &kp PERIOD     &kp F       &kp W       &kp R        &kp Y       &kp P
            &kp E        &mt LALT I   &mt LCTRL A  &mt LSHFT O   &mt LGUI MINUS &kp K       &mt RSHFT T &mt RCTRL N  &mt RALT S  &kp H
            &kp SLASH    &kp Z        &kp X        &lt 4 C       &lt 3 V        &lt 1 G     &lt 2 D     &kp M        &kp J       &kp B
            >;
        };

        layer_nam {
            bindings = <
            &kp N1       &kp N2       &kp N3       &kp N4        &kp N5         &kp N6      &kp N7      &kp N8       &kp N9      &kp N0
            &kp LCTRL    &kp SLASH    &kp ASTERISK &kp PERIOD    &kp EQUAL      &kp LEFT    &kp DOWN    &kp UP       &kp RIGHT   &kp RCTRL
            &kp LSHFT    &kp MINUS    &kp BSLH     &kp SQT       &kp GRAVE      &trans      &kp DEL     &kp LBKT     &kp RBKT    &kp RSHFT
            >;
        };

        layer_function {
            bindings = <
            &kp F1       &kp F2       &kp F3       &kp F4        &kp F5         &kp F6   &kp F7    &kp F8    &kp F9          &kp F10
            &none        &none        &none        &none         &kp F11        &none    &none     &none     &kp SEMICOLON   &kp RCTRL
            &none        &none        &none        &none         &kp F12        &none    &trans    &none     &kp COLON       &kp RSHFT
            >;
        };

        layer_mouse {
            bindings = <
            &none        &none        &none        &none         &none          &none          &none          &none        &none           &none
            &kp LCTRL    &mkp MB3     &mkp MB2     &mkp MB1      &none          &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &kp RCTRL
            &kp LSHFT    &mkp MB4     &mkp MB5     &none         &trans         &none          &none          &none        &none           &kp RSHFT
            >;
        }

        layer_system {
            bindings = <
            &none        &none        &none         &none        &none          &none          &bt BT_CLR &bt BT_CLR_ALL &out OUT_TOG &none
            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4   &none          &none      &none          &none        &none
            &none        &none        &none         &trans       &none          &none          &none      &none          &none        &none
            >;
        };
    };
};